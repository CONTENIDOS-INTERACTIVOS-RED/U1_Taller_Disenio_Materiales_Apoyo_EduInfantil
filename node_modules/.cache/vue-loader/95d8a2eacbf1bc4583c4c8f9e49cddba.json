{"remainingRequest":"/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/node_modules/pug-plain-loader/index.js!/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/src/views/curso/Tema2.vue?vue&type=template&id=3ed64fcb&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/src/views/curso/Tema2.vue","mtime":1747274799134},{"path":"/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/U1_Taller_Disenio_Materiales_Apoyo_EduInfantil/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXJzby1tYWluLWNvbnRhaW5lciBwYi0zIn0sW19jKCdCYW5uZXJJbnRlcm5vJyx7YXR0cnM6eyJzdWJUaXR1bG8iOicyLiBPcmRlbiB5IGplcmFycXXDrWEnfX0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29udGFpbmVyIHRhcmpldGEgdGFyamV0YS0tYmxhbmNhIHAtNCBwLW1kLTUgb3ZlcmZsb3ctaGlkZGVuIn0sW192bS5fbSgwKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1zdGFydCBtYi01In0sW192bS5fbSgxKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04In0sW19jKCdBY29yZGlvbkEnLHthdHRyczp7InRpcG8iOiJiIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJMYSBqZXJhcnF1w61hIn19LFtfYygncCcsW192bS5fdigiRXMgdW5hIGZvcm1hIGRlIG9yZ2FuaXphY2nDs24gZW4gbGEgcXVlIGxvcyBlbGVtZW50b3Mgc2Ugb3JkZW5hbiwgc2Vnw7puIHVuIG5pdmVsIGRlIGltcG9ydGFuY2lhIG8gYXV0b3JpZGFkLiBFc3RlIGNvbmNlcHRvIHNlIGFwbGljYSBlbiBkaXZlcnNhcyDDoXJlYXMsIGNvbW8gbGEgc29jaWVkYWQsIGxhcyBlbXByZXNhcyB5IGxhIGNsYXNpZmljYWNpw7NuIGRlIG9iamV0b3MuIExhIGplcmFycXXDrWEgaW1wbGljYSB1bmEgc3Vib3JkaW5hY2nDs24gZGUgbG9zIGVsZW1lbnRvcyBpbmZlcmlvcmVzIGEgbG9zIHN1cGVyaW9yZXMgKFJhZmZpbm8sIDIwMjQpLiBMYSBub2Npw7NuIGRlIGplcmFycXXDrWEgaGEgZXN0YWRvIHByZXNlbnRlIGVuIGxhcyBvcmdhbml6YWNpb25lcyBodW1hbmFzIGRlc2RlIHRpZW1wb3MgYW50aWd1b3MuIEVuIGxhIGFudGlndWEgR3JlY2lhLCBwb3IgZWplbXBsbywgbGEgamVyYXJxdcOtYSBzZSBlbnRlbmTDrWEgY29tbyBlbCBtYW5kYXRvIGRpdmlubywgZWplcmNpZG8gcG9yIGxvcyBjbMOpcmlnb3MgZW5jYXJnYWRvcyBkZSBsb3Mgcml0b3Mgc2FncmFkb3MuIENvbiBlbCB0aWVtcG8sIGxhIGplcmFycXXDrWEgc2UgaGEgYXBsaWNhZG8gZW4gbGEgY29uc3RydWNjacOzbiBkZSBzb2NpZWRhZGVzLCBvcmdhbml6YWNpb25lcyBlbXByZXNhcmlhbGVzIHkgY2xhc2lmaWNhY2lvbmVzIGNpZW50w61maWNhcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiRWwgb3JkZW4ifX0sW19jKCdwJyxbX3ZtLl92KCJTZSByZWZpZXJlIGEgbGEgZGlzcG9zaWNpw7NuIHkgb3JnYW5pemFjacOzbiBkZSBlbGVtZW50b3MgZW4gdW4gcGF0csOzbiBvIHNlY3VlbmNpYSBsw7NnaWNhLiBFcyB1bmEgZXN0cnVjdHVyYSBxdWUgZmFjaWxpdGEgbGEgY29tcHJlbnNpw7NuLCBlbCBhY2Nlc28geSBlbCB1c28gZGUgaW5mb3JtYWNpw7NuIG8gcmVjdXJzb3MgKFDDqXJleiwgKDIwMTQpLiBFbCBvcmRlbiBlcyBmdW5kYW1lbnRhbCBlbiBkaXZlcnNvcyBjYW1wb3MsIGNvbW8gbGEgY2llbmNpYSwgbGEgZWR1Y2FjacOzbiwgbGEgc29jaWVkYWQgeSBsYSB0ZWNub2xvZ8OtYSwgZGFkbyBxdWUgcGVybWl0ZSB1bmEgbWVqb3Igb3JnYW5pemFjacOzbiB5IGVmaWNpZW5jaWEuIEZpbMOzc29mb3MgZ3JpZWdvcywgY29tbyBBcmlzdMOzdGVsZXMsIGV4cGxvcmFyb24gbGEgaWRlYSBkZWwgb3JkZW4gZW4gZWwgY29zbW9zIHkgbGEgbmF0dXJhbGV6YS4gQXJpc3TDs3RlbGVzIHByb3B1c28gcXVlIGVsIHVuaXZlcnNvIHRlbsOtYSB1biBvcmRlbiBuYXR1cmFsIHkgamVyw6FycXVpY28sIGRvbmRlIGNhZGEgZWxlbWVudG8gdGVuw61hIHVuIHByb3DDs3NpdG8geSBsdWdhciBlc3BlY8OtZmljbyAoTW9saW5hLCAyMDE4KS4gVGFtYmnDqW4gbG9zIHJvbWFub3MgYWRvcHRhcm9uIGVsIGNvbmNlcHRvIGRlIG9yZGVuIGVuIHN1cyBsZXllcywgYXJxdWl0ZWN0dXJhIHkgb3JnYW5pemFjacOzbiBzb2NpYWwsIGRlc3RhY2FuZG8gbGEgaW1wb3J0YW5jaWEgZGUgbGEgZGlzY2lwbGluYSB5IGxhIGVzdHJ1Y3R1cmEuIildKV0pXSldLDEpXSksX3ZtLl9tKDIpLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTQifSxbX3ZtLl92KCJBaG9yYSBiaWVuLCBlbCBvcmRlbiB5IGxhIGplcmFycXXDrWEgZW4gZWwgYXByZW5kaXphamUsIHNlIHJlZmllcmVuIGEgbGEgb3JnYW5pemFjacOzbiBzaXN0ZW3DoXRpY2EgZGUgY29udGVuaWRvcyB5IGV4cGVyaWVuY2lhcyBlZHVjYXRpdmFzIHF1ZSBwZXJtaXRlbiBhbCBlc3R1ZGlhbnRlIGRlc2Fycm9sbGFyIG9wZXJhY2lvbmVzIG1lbnRhbGVzIGRlIG1hbmVyYSBwcm9ncmVzaXZhLiBTZWfDum4gUGlhZ2V0IGNpdGFkbyBwb3IgUmVnYWRlciAoMjAxNSksIGVzdGFzIGVzdHJ1Y3R1cmFzIGNvZ25pdGl2YXMgc2UgY29uc3RydXllbiBkZSBtYW5lcmEgc2VjdWVuY2lhbCwgcGFydGllbmRvIGRlIGxvIHNpbXBsZSBhIGxvIGNvbXBsZWpvLiBFc3RlIGVuZm9xdWUgc2lzdGVtw6F0aWNvIHBlcm1pdGUgcXVlIGxvcyBlc3R1ZGlhbnRlcyBjb25zdHJ1eWFuIHkgZXhwYW5kYW4gc3VzIGNvbm9jaW1pZW50b3MgZGUgbWFuZXJhIGzDs2dpY2EgeSBlZmVjdGl2YS4iKV0pLF9jKCdUYWJzQycse3N0YXRpY0NsYXNzOiJjb2xvci1hY2VudG8tY29udGVuaWRvIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0YWJzLWNvbnRlbnQgYm9yZGVyIHB4LTQgcC1tZC01IHB5LTMiLGF0dHJzOnsidGl0dWxvIjoiT3JkZW4gZW4gZWwgYXByZW5kaXphamUiLCJpY29uIjpyZXF1aXJlKCdAL2Fzc2V0cy9idWxsZXRzLzEuc3ZnJyl9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyBjb2wteGwtOCBtYi0zIG1iLW1kLTAifSxbX2MoJ2g0JyxbX3ZtLl92KCJPcmRlbiBlbiBlbCBhcHJlbmRpemFqZSIpXSksX2MoJ3AnLFtfdm0uX3YoIlNlIHJlZmllcmUgYSBsYSBzZWN1ZW5jaWFjacOzbiBvcmdhbml6YWRhIHkgbMOzZ2ljYSBkZSBsb3MgY29udGVuaWRvcyBlZHVjYXRpdm9zLiBFc3RvIGltcGxpY2EgcHJlc2VudGFyIGxvcyB0ZW1hcyBkZSB1bmEgbWFuZXJhIHF1ZSBsb3MgZXN0dWRpYW50ZXMgcHVlZGFuIHNlZ3VpciBkZSBmb3JtYSBjb2hlcmVudGUgeSBzaWduaWZpY2F0aXZhLiBMYSBwcmVzZW50YWNpw7NuIG9yZGVuYWRhIGRlIGxvcyBjb250ZW5pZG9zIGZhY2lsaXRhIGxhIGNvbXByZW5zacOzbiB5IHJldGVuY2nDs24gZGUgbGEgaW5mb3JtYWNpw7NuLCBwZXJtaXRpZW5kbyBhIGxvcyBlc3R1ZGlhbnRlcyBjb25lY3RhciBudWV2b3MgY29ub2NpbWllbnRvcywgY29uIGxvIHF1ZSB5YSBzYWJlbi4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbWQtOCBjb2wtbGctNSBjb2wteGwtNCJ9LFtfYygnZmlndXJlJyx7YXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTIvNC5wbmciKSwiYWx0IjoiIn19KV0pXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGFicy1jb250ZW50IGJvcmRlciBweC00IHAtbWQtNSBweS0zIixhdHRyczp7InRpdHVsbyI6IkplcmFycXXDrWEgZW4gZWwgYXByZW5kaXphamUiLCJpY29uIjpyZXF1aXJlKCdAL2Fzc2V0cy9idWxsZXRzLzEuc3ZnJyl9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyBjb2wteGwtOCBtYi0zIG1iLW1kLTAifSxbX2MoJ2g0JyxbX3ZtLl92KCJKZXJhcnF1w61hIGVuIGVsIGFwcmVuZGl6YWplIildKSxfYygncCcsW192bS5fdigiSW1wbGljYSBsYSBvcmdhbml6YWNpw7NuIGRlIGxvcyBjb250ZW5pZG9zIGVkdWNhdGl2b3MgZW4gbml2ZWxlcyBkZSBjb21wbGVqaWRhZCBjcmVjaWVudGUuIExvcyBlc3R1ZGlhbnRlcyBjb21pZW56YW4gY29uIGNvbmNlcHRvcyBiw6FzaWNvcyB5IHNpbXBsZXMsIHkgYSBtZWRpZGEgcXVlIGF2YW56YW4sIHNlIGxlcyBwcmVzZW50YW4gY29uY2VwdG9zIG3DoXMgY29tcGxlam9zIHkgYWJzdHJhY3Rvcy4gRXN0YSBwcm9ncmVzacOzbiBqZXLDoXJxdWljYSBlcyBlc2VuY2lhbCBwYXJhIGVsIGRlc2Fycm9sbG8gZGUgaGFiaWxpZGFkZXMgY29nbml0aXZhcyBhdmFuemFkYXMgeSBsYSBjb25zdHJ1Y2Npw7NuIGRlIGNvbm9jaW1pZW50b3MgcHJvZnVuZG9zLiIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1tZC04IGNvbC1sZy01IGNvbC14bC00In0sW19jKCdmaWd1cmUnLHthdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbiJ9fSxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMi81LnBuZyIpLCJhbHQiOiIifX0pXSldKV0pXSldKSxfdm0uX20oMyksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCJ9LFtfdm0uX3YoIkVzdGFzIGV0YXBhcyByZWZsZWphbiBjw7NtbyBsb3MgbmnDsW9zIGNvbnN0cnV5ZW4geSBvcmdhbml6YW4gc3UgY29ub2NpbWllbnRvLCBkZSBtYW5lcmEgamVyw6FycXVpY2EgeSBvcmRlbmFkYS4iKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBiZy1jb2xvci00IG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJweC00IHAtbWQtNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGFsaWduLWl0ZW1zLWNlbnRlciJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03IG9yZGVyLTIifSxbX2MoJ2gyJyx7c3RhdGljQ2xhc3M6Im1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJmbGlwLXVwIn19LFtfdm0uX3YoIk90cm9zIGF1dG9yZXMiKV0pLF92bS5fbSg0KSxfYygnYScse3N0YXRpY0NsYXNzOiJhbmV4byBtYi00IGJnLXdoaXRlIHctZml0IixhdHRyczp7ImhyZWYiOl92bS5vYnRlbmVyTGluaygnL2Rvd25sb2Fkcy9BbmV4b18zLnBkZicpLCJ0YXJnZXQiOiJfYmxhbmsiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX2ljb25vIixzdHlsZTooeydiYWNrZ3JvdW5kLWNvbG9yJzogJyNGQ0RGREInfSl9LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXBkZi5zdmciKX19KV0pLF92bS5fbSg1KV0pXSksX3ZtLl9tKDYpXSldKV0pLF92bS5fbSg3KSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00In0sW192bS5fdigiUGFyYSBNb3JlaXJhICgyMDEyKSwgc2Vnw7puIGxvcyBhcG9ydGVzIGRlIEF1c3ViZWwsIGV4aXN0ZW4gZGlmZXJlbnRlcyB0aXBvcyBkZSBvcmdhbml6YWRvcmVzIHByZXZpb3M6ICIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJnLWNvbG9yLWluZm8gbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InAtNCBwLW1kLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctOCJ9LFtfYygnSW1hZ2VuSW5mb2dyYWZpY2EnLHtzdGF0aWNDbGFzczoiY29sb3Itc2VjdW5kYXJpbyIsc2NvcGVkU2xvdHM6X3ZtLl91KFt7a2V5OiJpbWFnZW4iLGZuOmZ1bmN0aW9uKCl7cmV0dXJuIFtfYygnZmlndXJlJyxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJteC1hdXRvIixzdGF0aWNTdHlsZTp7Im1heC13aWR0aCI6IjExMDZweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMi8xMS5zdmciKSwiYWx0IjoiIn19KV0pXX0scHJveHk6dHJ1ZX1dKX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3Itd2hpdGUgYm94LXNoYWRvdyBwLTMiLGF0dHJzOnsieCI6IjglIiwieSI6IjglIiwibnVtZXJvIjoiKyJ9fSxbX2MoJ2g1JyxbX3ZtLl92KCIxLiBNYXBhcyBjb25jZXB0dWFsZXMiKV0pLF9jKCdwJyxbX3ZtLl92KCJSZXByZXNlbnRhY2lvbmVzIGdyw6FmaWNhcyBxdWUgbXVlc3RyYW4gbGFzIHJlbGFjaW9uZXMgZW50cmUgY29uY2VwdG9zLiBMb3MgbWFwYXMgY29uY2VwdHVhbGVzIHBlcm1pdGVuIGEgbG9zIGVzdHVkaWFudGVzIHZpc3VhbGl6YXIgY8OzbW8gc2UgY29uZWN0YW4gbG9zIG51ZXZvcyBjb250ZW5pZG9zIGNvbiBsbyBxdWUgeWEgc2FiZW4uIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3Itd2hpdGUgYm94LXNoYWRvdyBwLTMiLGF0dHJzOnsieCI6IjglIiwieSI6IjU2JSIsIm51bWVybyI6IisifX0sW19jKCdoNScsW192bS5fdigiMi4gRXNxdWVtYXMgbyBkaWFncmFtYXMiKV0pLF9jKCdwJyxbX3ZtLl92KCJFc3RydWN0dXJhcyB2aXN1YWxlcyBxdWUgb3JnYW5pemFuIGxhIGluZm9ybWFjacOzbiBkZSBtYW5lcmEgbMOzZ2ljYS4gUG9yIGVqZW1wbG8sIGRpYWdyYW1hcyBkZSBmbHVqbyBxdWUgaWx1c3RyYW4gcHJvY2Vzb3MgbyBzZWN1ZW5jaWFzLiIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcC0zIixhdHRyczp7IngiOiI5MSUiLCJ5IjoiOCUiLCJudW1lcm8iOiIrIn19LFtfYygnaDUnLFtfdm0uX3YoIjMuIEFuYWxvZ8OtYXMgeSBtZXTDoWZvcmFzIildKSxfYygncCcsW192bS5fdigiQ29tcGFyYWNpb25lcyBxdWUgcmVsYWNpb25hbiBudWV2b3MgY29uY2VwdG9zIGNvbiBpZGVhcyBmYW1pbGlhcmVzIHBhcmEgbG9zIGVzdHVkaWFudGVzLiBMYXMgYW5hbG9nw61hcyB5IGxhcyBtZXTDoWZvcmFzLCBmYWNpbGl0YW4gbGEgY29tcHJlbnNpw7NuIGRlIGNvbmNlcHRvcyBhYnN0cmFjdG9zLiIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcC0zIixhdHRyczp7IngiOiI5MSUiLCJ5IjoiNTYlIiwibnVtZXJvIjoiKyJ9fSxbX2MoJ2g1JyxbX3ZtLl92KCI0LiBQcmVndW50YXMgZ3XDrWEiKV0pLF9jKCdwJyxbX3ZtLl92KCJQcmVndW50YXMgcXVlIG9yaWVudGFuIGVsIHBlbnNhbWllbnRvIGRlIGxvcyBlc3R1ZGlhbnRlcyBoYWNpYSBsb3MgdGVtYXMgcXVlIHNlIHZhbiBhIHRyYXRhciwgaW5jZW50aXZhbmRvIGxhIHJlZmxleGnDs24geSBlbCBhbsOhbGlzaXMgcHJldmlvLiIpXSldKV0pXSwxKV0pXSldKSxfdm0uX20oOCksX3ZtLl9tKDkpLF92bS5fbSgxMCksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtc3RhcnQgbWItNSJ9LFtfdm0uX20oMTEpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTgifSxbX2MoJ0Fjb3JkaW9uQScse2F0dHJzOnsidGlwbyI6ImIifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiZGl2IixhdHRyczp7InRpdHVsbyI6IkxhIG9ic2VydmFjacOzbiJ9fSxbX2MoJ3VsJyx7c3RhdGljQ2xhc3M6Imxpc3RhLXVsLS1jb2xvciJ9LFtfYygnbGknLHtzdGF0aWNDbGFzczoibWItMCBkLWZsZXgifSxbX2MoJ2knLHtzdGF0aWNDbGFzczoiZmFyIGZhLWFycm93LWFsdC1jaXJjbGUtcmlnaHQgYmctY29sb3ItOSJ9KSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW19jKCdiJyxbX3ZtLl92KCJQcm9jZXNvIGluaWNpYWwgZGUgY29udGFjdG8gZGlyZWN0byBjb24gb2JqZXRvcyB5IGZlbsOzbWVub3MuIildKSxfdm0uX3YoIiBMYSBvYnNlcnZhY2nDs24gZXMgZWwgcHJpbWVyIHBhc28gZW4gZWwgcHJvY2VzbyBkZSBhcHJlbmRpemFqZS4gSW52b2x1Y3JhIGxhIGludGVyYWNjacOzbiBkaXJlY3RhIGNvbiBlbCBlbnRvcm5vLCBwZXJtaXRpZW5kbyBhIGxvcyBlc3R1ZGlhbnRlcyByZWNvcGlsYXIgaW5mb3JtYWNpw7NuIGEgdHJhdsOpcyBkZSBzdXMgc2VudGlkb3MuIildKV0pLF9jKCdsaScse3N0YXRpY0NsYXNzOiJtYi0wIGQtZmxleCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOiJmYXIgZmEtYXJyb3ctYWx0LWNpcmNsZS1yaWdodCBiZy1jb2xvci05In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIkJhc2UgcGFyYSBlbCBkZXNhcnJvbGxvIGRlIGhhYmlsaWRhZGVzIGNvZ25pdGl2YXMgc3VwZXJpb3Jlcy4iKV0pLF92bS5fdigiIEEgdHJhdsOpcyBkZSBsYSBvYnNlcnZhY2nDs24sIGxvcyBlc3R1ZGlhbnRlcyBkZXNhcnJvbGxhbiBoYWJpbGlkYWRlcyBjb2duaXRpdmFzIGNvbW8gbGEgYXRlbmNpw7NuLCBsYSBwZXJjZXBjacOzbiB5IGxhIG1lbW9yaWEuIildKV0pLF9jKCdsaScse3N0YXRpY0NsYXNzOiJtYi0wIGQtZmxleCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOiJmYXIgZmEtYXJyb3ctYWx0LWNpcmNsZS1yaWdodCBiZy1jb2xvci05In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIkltcGxpY2EgZWwgdXNvIGNvbnNjaWVudGUgZGUgbG9zIHNlbnRpZG9zLiIpXSksX3ZtLl92KCIgTGEgb2JzZXJ2YWNpw7NuIGVmZWN0aXZhIHJlcXVpZXJlIGxhIGF0ZW5jacOzbiBjb25zY2llbnRlIHkgZWwgdXNvIGludGVuY2lvbmFsIGRlIGxvcyBzZW50aWRvcyAodmlzdGEsIG/DrWRvLCB0YWN0bywgZXRjLikuIildKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJMYSBjb21wYXJhY2nDs24ifX0sW19jKCd1bCcse3N0YXRpY0NsYXNzOiJsaXN0YS11bC0tY29sb3IifSxbX2MoJ2xpJyx7c3RhdGljQ2xhc3M6Im1iLTAgZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0IGJnLWNvbG9yLTkifSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfYygnYicsW192bS5fdigiRXN0YWJsZWNpbWllbnRvIGRlIHNpbWlsaXR1ZGVzIHkgZGlmZXJlbmNpYXMuIildKSxfdm0uX3YoIiBMYSBjb21wYXJhY2nDs24gcGVybWl0ZSBhIGxvcyBlc3R1ZGlhbnRlcyBpZGVudGlmaWNhciB5IGFuYWxpemFyIGxhcyBzaW1pbGl0dWRlcyB5IGRpZmVyZW5jaWFzIGVudHJlIG9iamV0b3MgeSBmZW7Ds21lbm9zLiIpXSldKSxfYygnbGknLHtzdGF0aWNDbGFzczoibWItMCBkLWZsZXgifSxbX2MoJ2knLHtzdGF0aWNDbGFzczoiZmFyIGZhLWFycm93LWFsdC1jaXJjbGUtcmlnaHQgYmctY29sb3ItOSJ9KSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW19jKCdiJyxbX3ZtLl92KCJEZXNhcnJvbGxvIGRlIGNyaXRlcmlvcyBkZSBjbGFzaWZpY2FjacOzbi4iKV0pLF92bS5fdigiIEEgdHJhdsOpcyBkZSBsYSBjb21wYXJhY2nDs24sIGxvcyBlc3R1ZGlhbnRlcyBkZXNhcnJvbGxhbiBjcml0ZXJpb3MgcGFyYSBvcmdhbml6YXIgeSBjbGFzaWZpY2FyIGluZm9ybWFjacOzbi4iKV0pXSksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6Im1iLTAgZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0IGJnLWNvbG9yLTkifSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfYygnYicsW192bS5fdigiRnVuZGFtZW50byBwYXJhIGVsIHBlbnNhbWllbnRvIGFuYWzDrXRpY28uIildKSxfdm0uX3YoIiBMYSBoYWJpbGlkYWQgcGFyYSBjb21wYXJhciwgZXMgZXNlbmNpYWwgcGFyYSBlbCBwZW5zYW1pZW50byBhbmFsw610aWNvIHkgY3LDrXRpY28sIHBlcm1pdGllbmRvIGEgbG9zIGVzdHVkaWFudGVzIGV2YWx1YXIgeSBzaW50ZXRpemFyIGluZm9ybWFjacOzbi4iKV0pXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiZGl2IixhdHRyczp7InRpdHVsbyI6IkxhIGNsYXNpZmljYWNpw7NuIn19LFtfYygndWwnLHtzdGF0aWNDbGFzczoibGlzdGEtdWwtLWNvbG9yIn0sW19jKCdsaScse3N0YXRpY0NsYXNzOiJtYi0wIGQtZmxleCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOiJmYXIgZmEtYXJyb3ctYWx0LWNpcmNsZS1yaWdodCBiZy1jb2xvci05In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIk9yZ2FuaXphY2nDs24gZGUgZWxlbWVudG9zLCBzZWfDum4gY2FyYWN0ZXLDrXN0aWNhcyBjb211bmVzLiIpXSksX3ZtLl92KCIgTGEgY2xhc2lmaWNhY2nDs24gaW1wbGljYSBhZ3J1cGFyIG9iamV0b3MgbyBpbmZvcm1hY2nDs24sIHNlZ8O6biBjYXJhY3RlcsOtc3RpY2FzIGNvbXVuZXMuIildKV0pLF9jKCdsaScse3N0YXRpY0NsYXNzOiJtYi0wIGQtZmxleCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOiJmYXIgZmEtYXJyb3ctYWx0LWNpcmNsZS1yaWdodCBiZy1jb2xvci05In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIkRlc2Fycm9sbG8gZGUgY2F0ZWdvcsOtYXMgY29uY2VwdHVhbGVzLiIpXSksX3ZtLl92KCIgQSB0cmF2w6lzIGRlIGxhIGNsYXNpZmljYWNpw7NuLCBsb3MgZXN0dWRpYW50ZXMgZGVzYXJyb2xsYW4gY2F0ZWdvcsOtYXMgY29uY2VwdHVhbGVzIHF1ZSBsZXMgcGVybWl0ZW4gb3JnYW5pemFyIHkgY29tcHJlbmRlciBtZWpvciBlbCBtdW5kby4iKV0pXSksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6Im1iLTAgZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0IGJnLWNvbG9yLTkifSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfYygnYicsW192bS5fdigiQmFzZSBwYXJhIGxhIGNvbnN0cnVjY2nDs24gZGUgZXNxdWVtYXMgbWVudGFsZXMuIildKSxfdm0uX3YoIiBMYSBjbGFzaWZpY2FjacOzbiBheXVkYSBhIGNvbnN0cnVpciB5IG9yZ2FuaXphciBlc3F1ZW1hcyBtZW50YWxlcywgZmFjaWxpdGFuZG8gZWwgYXByZW5kaXphamUgeSBsYSByZXRlbmNpw7NuIGRlIGluZm9ybWFjacOzbi4iKV0pXSldKV0pXSldLDEpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCJ9LFtfdm0uX3YoIkFob3JhLCBjb25vemNhbW9zIGVsIHByb2Nlc28gZGUgY29uc3RydWNjacOzbiBkZWwgY29ub2NpbWllbnRvOiIpXSksX2MoJ1RhYnNDJyx7c3RhdGljQ2xhc3M6ImNvbG9yLWFjZW50by1jb250ZW5pZG8gbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRhYnMtY29udGVudCBib3JkZXIgcHgtNCBwLW1kLTUgcHktMyIsYXR0cnM6eyJ0aXR1bG8iOiJGYXNlIGNvbmNyZXRhIiwiaWNvbiI6cmVxdWlyZSgnQC9hc3NldHMvYnVsbGV0cy8xLnN2ZycpfX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtY2VudGVyIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcgY29sLXhsLTggbWItMyBtYi1tZC0wIn0sW19jKCdoNCcsW192bS5fdigiRmFzZSBjb25jcmV0YSIpXSksX2MoJ3VsJyx7c3RhdGljQ2xhc3M6Imxpc3RhLXVsLS1jb2xvciJ9LFtfYygnbGknLHtzdGF0aWNDbGFzczoiZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIk1hbmlwdWxhY2nDs24gZGlyZWN0YSBkZSBtYXRlcmlhbGVzLiIpXSksX3ZtLl92KCIgTG9zIGVzdHVkaWFudGVzIGludGVyYWN0w7phbiBkaXJlY3RhbWVudGUgY29uIG9iamV0b3MgeSBtYXRlcmlhbGVzLCBsbyBxdWUgbGVzIHBlcm1pdGUgY29tcHJlbmRlciBjb25jZXB0b3MgZGUgbWFuZXJhIHRhbmdpYmxlLiIpXSldKSxfYygnbGknLHtzdGF0aWNDbGFzczoiZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIkV4cGVyaWVuY2lhcyBzZW5zb3JpYWxlcy4iKV0pLF92bS5fdigiIExhIG1hbmlwdWxhY2nDs24gZGUgbWF0ZXJpYWxlcyBvZnJlY2UgZXhwZXJpZW5jaWFzIHNlbnNvcmlhbGVzIHF1ZSBlbnJpcXVlY2VuIGVsIGFwcmVuZGl6YWplLiIpXSldKSxfYygnbGknLHtzdGF0aWNDbGFzczoiZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIkV4cGxvcmFjacOzbiBhY3RpdmEuIildKSxfdm0uX3YoIiBMb3MgZXN0dWRpYW50ZXMgZXhwbG9yYW4gYWN0aXZhbWVudGUgc3UgZW50b3JubywgbG8gcXVlIGZvbWVudGEgbGEgY3VyaW9zaWRhZCB5IGVsIGRlc2N1YnJpbWllbnRvLiIpXSldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbWQtOCBjb2wtbGctNSBjb2wteGwtNCJ9LFtfYygnZmlndXJlJyx7YXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTIvMTgucG5nIiksImFsdCI6IiJ9fSldKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRhYnMtY29udGVudCBib3JkZXIgcHgtNCBwLW1kLTUgcHktMyIsYXR0cnM6eyJ0aXR1bG8iOiJGYXNlIHJlcHJlc2VudGF0aXZhIiwiaWNvbiI6cmVxdWlyZSgnQC9hc3NldHMvYnVsbGV0cy8xLnN2ZycpfX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtY2VudGVyIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcgY29sLXhsLTggbWItMyBtYi1tZC0wIn0sW19jKCdoNCcsW192bS5fdigiRmFzZSByZXByZXNlbnRhdGl2YSIpXSksX2MoJ3VsJyx7c3RhdGljQ2xhc3M6Imxpc3RhLXVsLS1jb2xvciJ9LFtfYygnbGknLHtzdGF0aWNDbGFzczoiZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIkVsYWJvcmFjacOzbiBkZSBkaWJ1am9zIHkgZXNxdWVtYXMuIildKSxfdm0uX3YoIiBMb3MgZXN0dWRpYW50ZXMgY3JlYW4gcmVwcmVzZW50YWNpb25lcyBncsOhZmljYXMgZGUgbG8gcXVlIGhhbiBhcHJlbmRpZG8uIildKV0pLF9jKCdsaScse3N0YXRpY0NsYXNzOiJkLWZsZXgifSxbX2MoJ2knLHtzdGF0aWNDbGFzczoiZmFyIGZhLWFycm93LWFsdC1jaXJjbGUtcmlnaHQifSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfYygnYicsW192bS5fdigiUmVwcmVzZW50YWNpb25lcyBncsOhZmljYXMuIildKSxfdm0uX3YoIiBVdGlsaXphbiBncsOhZmljb3MsIGRpYWdyYW1hcyB5IGVzcXVlbWFzIHBhcmEgb3JnYW5pemFyIHkgdmlzdWFsaXphciBsYSBpbmZvcm1hY2nDs24uIildKV0pLF9jKCdsaScse3N0YXRpY0NsYXNzOiJkLWZsZXgifSxbX2MoJ2knLHtzdGF0aWNDbGFzczoiZmFyIGZhLWFycm93LWFsdC1jaXJjbGUtcmlnaHQifSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfYygnYicsW192bS5fdigiQ29uc3RydWNjacOzbiBkZSBtb2RlbG9zLiIpXSksX3ZtLl92KCIgTG9zIGVzdHVkaWFudGVzIGNvbnN0cnV5ZW4gbW9kZWxvcyBxdWUgcmVwcmVzZW50YW4gY29uY2VwdG9zIGFic3RyYWN0b3MuICIpXSldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbWQtOCBjb2wtbGctNSBjb2wteGwtNCJ9LFtfYygnZmlndXJlJyx7YXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTIvMTkucG5nIiksImFsdCI6IiJ9fSldKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRhYnMtY29udGVudCBib3JkZXIgcHgtNCBwLW1kLTUgcHktMyIsYXR0cnM6eyJ0aXR1bG8iOiJGYXNlIHNpbWLDs2xpY2EiLCJpY29uIjpyZXF1aXJlKCdAL2Fzc2V0cy9idWxsZXRzLzEuc3ZnJyl9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyBjb2wteGwtOCBtYi0zIG1iLW1kLTAifSxbX2MoJ2g0JyxbX3ZtLl92KCJGYXNlIHNpbWLDs2xpY2EiKV0pLF9jKCd1bCcse3N0YXRpY0NsYXNzOiJsaXN0YS11bC0tY29sb3IifSxbX2MoJ2xpJyx7c3RhdGljQ2xhc3M6ImQtZmxleCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOiJmYXIgZmEtYXJyb3ctYWx0LWNpcmNsZS1yaWdodCJ9KSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW19jKCdiJyxbX3ZtLl92KCJVc28gZGUgc8OtbWJvbG9zIHkgc2lnbm9zLiIpXSksX3ZtLl92KCIgTG9zIGVzdHVkaWFudGVzIHV0aWxpemFuIHPDrW1ib2xvcyB5IHNpZ25vcyBwYXJhIHJlcHJlc2VudGFyIGlkZWFzIGNvbXBsZWphcy4iKV0pXSksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6ImQtZmxleCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOiJmYXIgZmEtYXJyb3ctYWx0LWNpcmNsZS1yaWdodCJ9KSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW19jKCdiJyxbX3ZtLl92KCJBYnN0cmFjY2nDs24gZGUgY29uY2VwdG9zLiIpXSksX3ZtLl92KCIgQSB0cmF2w6lzIGRlbCB1c28gZGUgc8OtbWJvbG9zLCBsb3MgZXN0dWRpYW50ZXMgZGVzYXJyb2xsYW4gbGEgY2FwYWNpZGFkIGRlIHBlbnNhciBkZSBtYW5lcmEgYWJzdHJhY3RhLiIpXSldKSxfYygnbGknLHtzdGF0aWNDbGFzczoiZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIkdlbmVyYWxpemFjacOzbiBkZSBhcHJlbmRpemFqZXMuIildKSxfdm0uX3YoIiBBcGxpY2FuIGxvcyBjb25vY2ltaWVudG9zIGFkcXVpcmlkb3MgYSBudWV2YXMgc2l0dWFjaW9uZXMgeSBjb250ZXh0b3MuIildKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1tZC04IGNvbC1sZy01IGNvbC14bC00In0sW19jKCdmaWd1cmUnLHthdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbiJ9fSxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMi8yMC5wbmciKSwiYWx0IjoiIn19KV0pXSldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJvcmRlci10b3AgYWN0aXZpZGFkIGJnLWNvbG9yLWFjdGl2aWRhZCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InAtNCBwLW1kLTUifSxbX2MoJ2Rpdicse2F0dHJzOnsiaWQiOiJBY3RpdmlkYWQifX0sW19jKCdBY3RpdmlkYWQnLHthdHRyczp7ImN1ZXN0aW9uYXJpbyI6X3ZtLmN1ZXN0aW9uYXJpb319KV0sMSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBib3JkZXItdG9wIGNvbG9yLXByaW1hcmlvIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicC00IHAtbWQtNSJ9LFtfYygnaDInLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIk1BVEVSSUFMIENPTVBMRU1FTlRBUklPIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYXRlcmlhbC1jb21wbGVtZW50YXJpbyJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC0xMiBjb2wtbWQtNiBjb2wtbGctNyJ9LFtfYygncCcsW192bS5fdigiTG9zIGludml0YW1vcyBhIGV4cGxvcmFyIGVsIG1hdGVyaWFsIGNvbXBsZW1lbnRhcmlvIGRlIGVzdGUgY3Vyc28sIGVuIGVzdGEgc2VjY2nDs24gZW5jb250cmFyw6EgcmVjdXJzb3MgcXVlIGxlIHBlcm1pdGlyw6FuIHByb2Z1bmRpemFyIHkgZW5yaXF1ZWNlciBzdSBhcHJlbmRpemFqZSBlbiBsb3MgdGVtYXMgdHJhdGFkb3MgZW4gZXN0YSB1bmlkYWQuIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwOi8vd3d3LmpvdXJuYWxhbHBoYWNlbnRhdXJpLmNvbS9pbmRleC5waHAvcmV2aXN0YS9hcnRpY2xlL2Rvd25sb2FkLzc2Lzc4IiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJSZcOhdGVndWksIFAuIFYuLCBCdXJnYSwgTC4gQS4gRC4gw4EuLCAmIFBpbmVkbywgRy4gUy4gKDIwMjIpLiBMb3Mgb3JnYW5pemFkb3JlcyBncsOhZmljb3MgY29tbyBlc3RyYXRlZ2lhIGVuIGxhIGNvbXByZW5zacOzbiBsZWN0b3JhOiB1bmEgcmV2aXNpw7NuIGRlIGxhIGxpdGVyYXR1cmEgY2llbnTDrWZpY2EgZGVsIDIwMTUtMjAyMS4gQWxwaGEgQ2VudGF1cmksIDMoMiksIDMxLTM2LiAiKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9lbGlicm8ubmV0L2VzL2VyZWFkZXIvdGVjbm9sb2dpY2FkZWxvcmllbnRlLzExMTU1Mz9wYWdlPTE0ICIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiUG9udGFsdGksIEIuICgyMDE4KS4gVGFsbGVyIGRlIG1hcGFzIGNvbmNlcHR1YWxlcyB5IG1lbnRhbGVzOiBwYXJhIGFwcmVuZGVyIGEgcGVuc2FyIHkgb3JnYW5pemFyIGlkZWFzOiAoIGVkLikuIE5hcmNlYSBFZGljaW9uZXMuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy51bmRlcnN0b29kLm9yZy9lcy1teC9hcnRpY2xlcy9jb21tb24tYWR2YW5jZS1vcmdhbml6ZXJzLWFuZC13aHktdGhleS13b3JrICIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiT3Nld2FsdCwgRy4gKDIyLCBvY3R1YnJlIDIwMjApLiBRdcOpIHNvbiBsb3Mgb3JnYW5pemFkb3JlcyBwcmV2aW9zIHkgcG9yIHF1w6kgZnVuY2lvbmFuLiBVbmRlcnN0b29kLiAiKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy90ZW1wbGF0ZS9pY29uby15dC5zdmciKX19KSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9ZjQweFM3YnNJdFkiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIlNwcm91dHMgRXNwYcOxb2wuICgyMDIzLCAxOCBkZSBhZ29zdG8pLiBMb3MgMyBwYXNvcyBkZSBhcHJlbmRpemFqZSBlbiBlbCBjdXJyw61jdWx1bSBlbiBlc3BpcmFsIGRlIEJydW5lci4gW1bDrWRlb10uIFlvdXR1YmUuICIpXSldKV0pLF92bS5fbSgxMildKV0pXSldLDEpXSwxKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCBtYi0zIG1iLWxnLTAgb3JkZXItbGctMiJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMi8xLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04IG9yZGVyLWxnLTEifSxbX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkxvcyBjb25jZXB0b3MgZGUgIiksX2MoJ2InLFtfdm0uX3YoIm9yZGVuIHkgamVyYXJxdcOtYSIpXSksX3ZtLl92KCIgZW4gZWwgYXByZW5kaXphamUsIHNvbiBmdW5kYW1lbnRhbGVzIHBhcmEgb3JnYW5pemFyIHkgZXN0cnVjdHVyYXIgbG9zIGNvbm9jaW1pZW50b3MgZGUgbWFuZXJhIHF1ZSBmYWNpbGl0ZW4gZWwgZGVzYXJyb2xsbyBjb2duaXRpdm8uIEVzdGUgZW5mb3F1ZSBwZXJtaXRlIGEgbG9zIGVzdHVkaWFudGVzIHByb2dyZXNhciBkZXNkZSBjb25jZXB0b3Mgc2ltcGxlcywgaGFjaWEgaWRlYXMgbcOhcyBjb21wbGVqYXMsIGNyZWFuZG8gY29uZXhpb25lcyBzaWduaWZpY2F0aXZhcyBlbnRyZSBsbyBxdWUgeWEgc2FiZW4geSBsbyBxdWUgZXN0w6FuIGFwcmVuZGllbmRvLiBMYSBzZWN1ZW5jaWFjacOzbiBhZGVjdWFkYSBkZSBsb3MgY29udGVuaWRvcyB5IGVsIHVzbyBkZSBvcmdhbml6YWRvcmVzIHByZXZpb3MsIGp1ZWdhbiB1biBwYXBlbCBjcnVjaWFsIGVuIGVzdGUgcHJvY2Vzby4gUGVybzoiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMyBwLTQgbWItMyIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtc3RhcnQifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctYXV0byJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8iLHN0YXRpY1N0eWxlOnsibWF4LXdpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMi8yLnN2ZyIpfX0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGcifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIsK/Q8OzbW8gYWZlY3RhIHJlYWxtZW50ZSBsYSBlc3RydWN0dXJhIGplcsOhcnF1aWNhIGFsIGFwcmVuZGl6YWplIGRlIGxvcyBlc3R1ZGlhbnRlcz8gwr9EZSBxdcOpIG1hbmVyYSBsYSBvcmdhbml6YWNpw7NuIHkgZWwgb3JkZW4gaW5mbHV5ZW4gZW4gbnVlc3RyYSBjYXBhY2lkYWQgcGFyYSBjb21wcmVuZGVyIHkgcmV0ZW5lciBsYSBpbmZvcm1hY2nDs24/IMK/UHVlZGVuIHBlbnNhciBlbiB1biBtb21lbnRvIGVuIGVsIHF1ZSBsYSBmYWx0YSBkZSBlc3RydWN0dXJhIGxlcyBoYXlhIGRpZmljdWx0YWRvIGVsIGFwcmVuZGl6YWplPyDCv0PDs21vIGxvIHN1cGVyYXJvbj8iKV0pXSldKV0pLF9jKCdwJyxbX3ZtLl92KCJFbiBlbCB0cmFuc2N1cnNvIGRlbCB0ZW1hLCBlc3RhcmVtb3MgZXN0dWRpYW5kbyBlc3RvcyBkb3MgY29uY2VwdG9zIGFwbGljYWRvcyBhbCBhcHJlbmRpemFqZSB5IGEgbGFzIHNlY3VlbmNpYXMgZGlkw6FjdGljYXMgeSBtYXRlcmlhbGVzOyB2ZXJlbW9zIGFsZ3Vub3MgYXV0b3JlcyBjb24gdGVvcsOtYXMgcXVlIGxvIHN1c3RlbnRhbiB5IHF1ZSBhw7puIGVuIGxhIGFjdHVhbGlkYWQsIHNpZ3VlbiBlc3RhbmRvIHZpZ2VudGVzLiIpXSksX2MoJ2g1JyxbX3ZtLl92KCJFbXBlY2Vtb3MgZGVmaW5pZW5kbyBlc3RvcyBjb25jZXB0b3M6ICIpXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgbWItMyBtYi1sZy0wIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1iLTQgbWItbGctMCIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWEyLzMucG5nIiksImFsdCI6IiJ9fSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzJfMSIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjIuMSIpXSksX3ZtLl92KCIgQ29uY2VwdG8gZGUgb3JkZW4geSBqZXJhcnF1w61hIGVuIGVsIGFwcmVuZGl6YWplIildKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBiZy1jb2xvci01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicC00IHAtbWQtNSJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi00In0sW192bS5fdigiUGFyYSBKZWFuIFBpYWdldCwgY2l0YWRvIHBvciBSZWdhZGVyICgyMDE1KSwgdW4gZGVzdGFjYWRvIHBzaWPDs2xvZ28gZGVsIGRlc2Fycm9sbG8sIHByb3B1c28gcXVlIGVsIGFwcmVuZGl6YWplIHNlIHJlYWxpemEgZGUgbWFuZXJhIHNlY3VlbmNpYWwgeSBwcm9ncmVzaXZhLCBsYXMgZXN0cnVjdHVyYXMgY29nbml0aXZhcyBzZSBjb25zdHJ1eWVuIHBhcnRpZW5kbyBkZSBsbyBzaW1wbGUgYSBsbyBjb21wbGVqbywgc2lndWllbmRvIGV0YXBhcyBlc3BlY8OtZmljYXMgZGUgZGVzYXJyb2xsbyBjb2duaXRpdm86IildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGFsaWduLWl0ZW1zLXN0cmV0Y2ggbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy0zIG1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcHgtNCBweS01IGgtMTAwIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byBkLWJsb2NrIG1iLTQiLHN0YXRpY1N0eWxlOnsid2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWEyLzYuc3ZnIiksImFsdCI6IiJ9fSksX2MoJ2g1Jyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiRXRhcGEgc2Vuc29yaW9tb3RvcmEgKDAtMiBhw7FvcykiKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAgdGV4dC1jZW50ZXIifSxbX3ZtLl92KCJMb3MgbmnDsW9zIGFwcmVuZGVuIGEgdHJhdsOpcyBkZSBsYSBtYW5pcHVsYWNpw7NuIGRlIG9iamV0b3MgeSBsYSBleHBlcmllbmNpYSBzZW5zb3JpYWwuIildKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctMyBtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbi11cCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBib3gtc2hhZG93IHB4LTQgcHktNSBoLTEwMCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8gZC1ibG9jayBtYi00IixzdGF0aWNTdHlsZTp7IndpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMi83LnN2ZyIpLCJhbHQiOiIifX0pLF9jKCdoNScse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIkV0YXBhIHByZW9wZXJhY2lvbmFsICgyLTcgYcOxb3MpIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIHRleHQtY2VudGVyIn0sW192bS5fdigiTG9zIG5pw7FvcyBjb21pZW56YW4gYSB1c2FyIGVsIGxlbmd1YWplIHkgYSBkZXNhcnJvbGxhciByZXByZXNlbnRhY2lvbmVzIHNpbWLDs2xpY2FzLiIpXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTMgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4tdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3Itd2hpdGUgYm94LXNoYWRvdyBweC00IHB5LTUgaC0xMDAifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJteC1hdXRvIGQtYmxvY2sgbWItNCIsc3RhdGljU3R5bGU6eyJ3aWR0aCI6IjkwcHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTIvOC5zdmciKSwiYWx0IjoiIn19KSxfYygnaDUnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCJFdGFwYSBkZSBsYXMgb3BlcmFjaW9uZXMgY29uY3JldGFzICg3LTExIGHDsW9zKSIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCB0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIkxvcyBuacOxb3MgZGVzYXJyb2xsYW4gaGFiaWxpZGFkZXMgZGUgY2xhc2lmaWNhY2nDs24sIG9yZGVuYW1pZW50byB5IGNvbnNlcnZhY2nDs24uIildKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctMyBtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbi11cCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBib3gtc2hhZG93IHB4LTQgcHktNSBoLTEwMCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8gZC1ibG9jayBtYi00IixzdGF0aWNTdHlsZTp7IndpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMi85LnN2ZyIpLCJhbHQiOiIifX0pLF9jKCdoNScse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIkV0YXBhIGRlIGxhcyBvcGVyYWNpb25lcyBmb3JtYWxlcyAoMTEgYcOxb3MgZW4gYWRlbGFudGUpIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIHRleHQtY2VudGVyIn0sW192bS5fdigiTG9zIGFkb2xlc2NlbnRlcyB5IGFkdWx0b3MgasOzdmVuZXMsIGRlc2Fycm9sbGFuIGxhIGNhcGFjaWRhZCBkZSBwZW5zYW1pZW50byBhYnN0cmFjdG8geSByYXpvbmFtaWVudG8gbMOzZ2ljby4iKV0pXSldKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygncCcse3N0YXRpY0NsYXNzOiJtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1yaWdodCJ9fSxbX3ZtLl92KCJFbCBlc3R1ZGlvIGRlIGxhcyB0ZW9yw61hcyBkZWwgYXByZW5kaXphamUgaGEgc2lkbyBlbnJpcXVlY2lkbyBwb3IgZGl2ZXJzb3MgYXV0b3JlcyBxdWUgaGFuIGFwb3J0YWRvIGVuZm9xdWVzIGlubm92YWRvcmVzIHNvYnJlIGxhIGNvbnN0cnVjY2nDs24gZGVsIGNvbm9jaW1pZW50by4gRW4gZWwgUERGICIpLF9jKCdiJyxbX3ZtLl92KCJPdHJvcyBhdXRvcmVzIildKSxfdm0uX3YoIiwgc2UgYW5hbGl6YW4gbGFzIGNvbnRyaWJ1Y2lvbmVzIGRlIEplcm9tZSBCcnVuZXIgeSBEYXZpZCBBdXN1YmVsLCBxdWllbmVzIGRlc2Fycm9sbGFyb24gdGVvcsOtYXMgZnVuZGFtZW50YWxlcyBjb21vIGVsIGFuZGFtaWFqZSB5IGVsIGFwcmVuZGl6YWplIHNpZ25pZmljYXRpdm8uIEEgdHJhdsOpcyBkZSBlc3RlIGFuw6FsaXNpcywgc2UgY29tcHJlbmRlcsOhIGPDs21vIHN1cyBwbGFudGVhbWllbnRvcyBoYW4gaW5mbHVpZG8gZW4gbGEgZWR1Y2FjacOzbiBtb2Rlcm5hIHkgZW4gbGEgbWFuZXJhIGVuIHF1ZSBsb3MgZG9jZW50ZXMgZGlzZcOxYW4gZXN0cmF0ZWdpYXMgcGFyYSBmYWNpbGl0YXIgZWwgYXByZW5kaXphamUgZW4gZGlzdGludG9zIGNvbnRleHRvcy4iKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX3RleHRvIn0sW19jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiQW5leG8uICIpXSksX3ZtLl92KCIgT3Ryb3MgYXV0b3Jlcy4iKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSBvcmRlci0xIG1iLTMgbWItbGctMCJ9LFtfYygnZmlndXJlJyx7YXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTIvMTAucG5nIiksImFsdCI6IiJ9fSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzJfMiIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjIuMiIpXSksX3ZtLl92KCIgVGlwb3MgZGUgb3JnYW5pemFkb3JlcyBwcmV2aW9zOiBtYXBhIGNvbmNlcHR1YWwiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJnLWNvbG9yLTUgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InB4LTQgcC1tZC01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCBvcmRlci0yIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWEyLzEyLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04IG9yZGVyLTEgbWItMyBtYi1sZy0wIn0sW19jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJPcmVsbGFuYSBWYWxkw6lzICgyMDA5KSwgcG9yIHN1IHBhcnRlLCBoYWNlIGVzcGVjaWFsIMOpbmZhc2lzIGVuIGxvcyBtYXBhcyBjb25jZXB0dWFsZXMsIHB1ZXN0byBxdWUgZGEgcmVzcHVlc3RhIGEgbGEgdGVvcsOtYSBkZSBBdXN1YmVsIGFxdcOtIGV4cHVlc3RhOyBlbnRvbmNlcywgbG9zIG1hcGFzIGNvbmNlcHR1YWxlcywgZGVzYXJyb2xsYWRvcyBlbiBsYSBVbml2ZXJzaWRhZCBkZSBDb3JuZWxsIGEgcGFydGlyIGRlIGxhIHRlb3LDrWEgZGVsIGFwcmVuZGl6YWplIHNpZ25pZmljYXRpdm8gZGUgQXVzdWJlbCwgc2UgaGFuIGNvbnZlcnRpZG8gZW4gdW5hIGhlcnJhbWllbnRhIHZhbGlvc2EgcGFyYSBwcm9mZXNvcmVzLCBpbnZlc3RpZ2Fkb3JlcyB5IGVzdHVkaWFudGVzLiBTdSBvYmpldGl2byBwcmluY2lwYWwgZXMgcmVwcmVzZW50YXIgcmVsYWNpb25lcyBzaWduaWZpY2F0aXZhcyBlbnRyZSBjb25jZXB0b3MsIGVuIGZvcm1hIGRlIHByb3Bvc2ljaW9uZXMsIGZhY2lsaXRhbmRvIGxhIGNvbXByZW5zacOzbiB5IGFzaW1pbGFjacOzbiBkZSBsYSBpbmZvcm1hY2nDs24uIFVuIG1hcGEgY29uY2VwdHVhbCBiw6FzaWNvIGNvbnN0YSBkZSBkb3MgbyBtw6FzIGNvbmNlcHRvcyB1bmlkb3MgcG9yIHBhbGFicmFzIGRlIGVubGFjZSwgZm9ybWFuZG8gdW5hIHByb3Bvc2ljacOzbiBjb24gc2lnbmlmaWNhZG8gZXNwZWPDrWZpY28uIFBvciBlamVtcGxvLCBcImVsIGNpZWxvIGVzIGF6dWxcIiByZXByZXNlbnRhIHVuYSBwcm9wb3NpY2nDs24gdsOhbGlkYSBxdWUgcmVsYWNpb25hIGxvcyBjb25jZXB0b3MgXCJjaWVsb1wiIHkgXCJhenVsXCIuIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLTIgcC00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW192bS5fdigiTG9zIG1hcGFzIGNvbmNlcHR1YWxlcyBzZSBjYXJhY3Rlcml6YW4gcG9yIHN1IGVzdHJ1Y3R1cmEgamVyw6FycXVpY2EsIGRvbmRlIGxvcyBjb25jZXB0b3MgbcOhcyBnZW5lcmFsZXMgZSBpbmNsdXNpdm9zIHNlIHNpdMO6YW4gZW4gbGEgcGFydGUgc3VwZXJpb3IsIG1pZW50cmFzIHF1ZSBsb3MgY29uY2VwdG9zIG3DoXMgZXNwZWPDrWZpY29zIHNlIHViaWNhbiBlbiBsYSBwYXJ0ZSBpbmZlcmlvci4gRXN0YSBvcmdhbml6YWNpw7NuIGZhY2lsaXRhIGxhIGNvbXByZW5zacOzbiBkZSBjw7NtbyBzZSByZWxhY2lvbmFuIGxvcyBjb25jZXB0b3MgZW50cmUgc8OtIHkgY8OzbW8gc2UgY29uc3RydXllIGVsIGNvbm9jaW1pZW50bywgZGUgbWFuZXJhIHByb2dyZXNpdmEuIExvcyBtYXBhcyBjb25jZXB0dWFsZXMgbm8gc29sbyByZXByZXNlbnRhbiB1biBjb25qdW50byBkZSBzaWduaWZpY2Fkb3MgY29uY2VwdHVhbGVzLCBzaW5vIHF1ZSB0YW1iacOpbiByZWZsZWphbiBsYSBlc3RydWN0dXJhIGRlIHByb3Bvc2ljaW9uZXMgcXVlIHN1YnlhY2VuIGEgbGEgY29tcHJlbnNpw7NuIGRlIHVuIHRlbWEuIildKV0pXSldKSxfYygnaDInLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkVsIHVzbyBkZSBtYXBhcyBjb25jZXB0dWFsZXMgY29tbyBlc3RyYXRlZ2lhIGRlIGFwcmVuZGl6YWplIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi01In0sW192bS5fdigiU2Vnw7puIGRpdmVyc29zIGF1dG9yZXMgY29tbyBCZWx0csOhbiwgT250b3JpYSB5IE5vdmFrLCBjaXRhZG9zIHBvciBPcmVsbGFuYSBWYWxkw6lzICgyMDA5KSwgbG9zIG1hcGFzIGNvbmNlcHR1YWxlczoiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtc3RyZXRjaCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00IG1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcHgtNCBweS01IGgtMTAwIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byBkLWJsb2NrIG1iLTQiLHN0YXRpY1N0eWxlOnsid2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWEyLzEzLnN2ZyIpLCJhbHQiOiIifX0pLF9jKCdoNScse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIlByaW1lcm8iKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAgdGV4dC1jZW50ZXIifSxbX3ZtLl92KCJTb24gdW5hIGhlcnJhbWllbnRhIGVmaWNheiBwYXJhIHByb21vdmVyIGVsIGFwcmVuZGl6YWplIHNpZ25pZmljYXRpdm8uIildKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCBtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbi11cCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBib3gtc2hhZG93IHB4LTQgcHktNSBoLTEwMCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8gZC1ibG9jayBtYi00IixzdGF0aWNTdHlsZTp7IndpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMi8xMy5zdmciKSwiYWx0IjoiIn19KSxfYygnaDUnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCJTZWd1bmRvIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIHRleHQtY2VudGVyIn0sW192bS5fdigiRmFjaWxpdGFuIGxhIG9yZ2FuaXphY2nDs24gZGUgbG9zIGNvbnRlbmlkb3MsIGxhIGNvbmV4acOzbiBlbnRyZSBjb25jZXB0b3MgeSBsYSBhc2ltaWxhY2nDs24gZGUgbnVldmEgaW5mb3JtYWNpw7NuLiAiKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00IG1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcHgtNCBweS01IGgtMTAwIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byBkLWJsb2NrIG1iLTQiLHN0YXRpY1N0eWxlOnsid2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWEyLzEzLnN2ZyIpLCJhbHQiOiIifX0pLF9jKCdoNScse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIlRlcmNlcm8iKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAgdGV4dC1jZW50ZXIifSxbX3ZtLl92KCJGb21lbnRhbiBlbCBkZXNhcnJvbGxvIGRlIGRlc3RyZXphcyBjb2duaXRpdmFzIHkgbWV0YWNvZ25pdGl2YXMgZW4gbG9zIGVzdHVkaWFudGVzLCBjb21vIGxhIGNhcGFjaWRhZCBkZSBhbmFsaXphciwgc2ludGV0aXphciB5IHJlbGFjaW9uYXIgaW5mb3JtYWNpw7NuLiIpXSldKV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCBtYi0zIG1iLWxnLTAifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTIvMTQucG5nIiksImRhdGEtYW9zIjoiem9vbS1pbiJ9fSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTgifSxbX2MoJ3AnLFtfdm0uX3YoIlN1IHVzbyBzZSBjZW50cmEgZW4gZWwgYWx1bW5vLCBwcm9tb3ZpZW5kbyB1biBhcHJlbmRpemFqZSBhY3Rpdm8geSBhdXTDs25vbW8uIildKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiTGEgaW52ZXN0aWdhY2nDs24gc29icmUgZWwgYXByZW5kaXphamUsIGhhIHJldmVsYWRvIHF1ZSBsb3MgaW5kaXZpZHVvcyBjb21iaW5hbiBjb25jZXB0b3MgeSBwcm9jZWRpbWllbnRvcyBlbiBmb3JtYSBkZSByZWdsYXMgcGFyYSBsYSBhY2Npw7NuLCBsbyBxdWUgc2UgY29ub2NlIGNvbW8gIiksX2MoJ2InLFtfdm0uX3YoImNvbm9jaW1pZW50byBlc3RyYXTDqWdpY28iKV0pLF92bS5fdigiLiBFc3RlIHRpcG8gZGUgY29ub2NpbWllbnRvIGltcGxpY2EgbGEgY2FwYWNpZGFkIGRlIGFjdGl2YXIgZXN0cmF0ZWdpYXMgY29nbml0aXZhcyBwYXJhIHJlc29sdmVyIHByb2JsZW1hcyB5IGFsY2FuemFyIG1ldGFzLiBMb3MgbWFwYXMgY29uY2VwdHVhbGVzLCBhbCByZXByZXNlbnRhciBsYXMgcmVsYWNpb25lcyBlbnRyZSBjb25jZXB0b3MgeSBwcm9wb3NpY2lvbmVzLCBwdWVkZW4gc2VyIHVuYSBoZXJyYW1pZW50YSDDunRpbCBwYXJhIGRlc2Fycm9sbGFyIGVsIGNvbm9jaW1pZW50byBlc3RyYXTDqWdpY28sIHB1ZXN0byBxdWUgcGVybWl0ZW4gYSBsb3MgZXN0dWRpYW50ZXMgdmlzdWFsaXphciB5IGNvbXByZW5kZXIgY8OzbW8gYXBsaWNhciBzdXMgY29ub2NpbWllbnRvcyBlbiBkaWZlcmVudGVzIHNpdHVhY2lvbmVzLiIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci0zIHAtNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtc3RhcnQifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctYXV0byJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8iLHN0YXRpY1N0eWxlOnsibWF4LXdpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMi8xNS5zdmciKX19KV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJBIHBlc2FyIGRlIHN1IHV0aWxpZGFkIHkgcG90ZW5jaWFsLCBsb3MgbWFwYXMgY29uY2VwdHVhbGVzIG5vIHNvbiBhbXBsaWFtZW50ZSB1dGlsaXphZG9zIGVuIGVsIMOhbWJpdG8gZWR1Y2F0aXZvLiBFc3RvIHB1ZWRlIGRlYmVyc2UgYSBsYSBmYWx0YSBkZSBjb25vY2ltaWVudG8gc29icmUgc3UgYXBsaWNhY2nDs24geSBiZW5lZmljaW9zLiBTaW4gZW1iYXJnbywgZXN0YSBlc3RyYXRlZ2lhIGRlIGFwcmVuZGl6YWplIHkgZXZhbHVhY2nDs24sIG9mcmVjZSBudW1lcm9zYXMgdmVudGFqYXMsIHBvcnF1ZSBwZXJtaXRlIGEgbG9zIGVzdHVkaWFudGVzIGNvbXByZW5kZXIgbG9zIGNvbm9jaW1pZW50b3MgZGUgbWFuZXJhIG3DoXMgcHJvZnVuZGEgeSBzaWduaWZpY2F0aXZhLiBBZGVtw6FzLCBmYWNpbGl0YSBsYSBpZGVudGlmaWNhY2nDs24gZGUgZXJyb3JlcyBjb25jZXB0dWFsZXMgeSBsYSBldmFsdWFjacOzbiBkZWwgcHJvZ3Jlc28gaW5kaXZpZHVhbC4iKV0pXSldKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgb3JkZXItbGctMiBtYi0zIG1iLWxnLTAifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTIvMTYucG5nIiksImRhdGEtYW9zIjoiem9vbS1pbiJ9fSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTggb3JkZXItbGctMSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLTcgcC00IG1iLTMiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJFbiBvdHJhcyBwYWxhYnJhcywgbG9zIG1hcGFzIGNvbmNlcHR1YWxlcyBzb24gdW5hIGhlcnJhbWllbnRhIHBvZGVyb3NhIHBhcmEgZWwgYXByZW5kaXphamUgc2lnbmlmaWNhdGl2bywgZWwgZGVzYXJyb2xsbyBkZWwgY29ub2NpbWllbnRvIGVzdHJhdMOpZ2ljbyB5IGxhIGV2YWx1YWNpw7NuIGRlbCBhcHJlbmRpemFqZS4gU3UgZXN0cnVjdHVyYSBqZXLDoXJxdWljYSB5IHN1IGNhcGFjaWRhZCBwYXJhIHJlcHJlc2VudGFyIHJlbGFjaW9uZXMgZW50cmUgY29uY2VwdG9zLCBsb3MgY29udmllcnRlbiBlbiB1biByZWN1cnNvIHZhbGlvc28gcGFyYSBlc3R1ZGlhbnRlcyB5IGRvY2VudGVzLiBBIHBlc2FyIHF1ZSBzdSB1c28gbm8gZXN0w6EgbXV5IGV4dGVuZGlkbywgbG9zIG1hcGFzIGNvbmNlcHR1YWxlcyB0aWVuZW4gZWwgcG90ZW5jaWFsIGRlIHRyYW5zZm9ybWFyIGxhIGZvcm1hIGVuIHF1ZSBzZSBlbnNlw7FhIHkgc2UgYXByZW5kZS4iKV0pXSksX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkFob3JhIGJpZW4sIGVuIGVzdGUgcHVudG8gcG9kZW1vcyBtZW5jaW9uYXIgcHJvY2Vzb3MgbWVudGFsZXMgcXVlIHNvbiBuZWNlc2FyaW9zIHBhcmEgZWwgYXByZW5kaXphamUgeSBxdWUgc2UgZXN0aW11bGFuIGNvbiBlc3RhcyBlc3RyYXRlZ2lhcyBtZW5jaW9uYWRhcyBkZXNkZSBsYXMgbWlyYWRhcyBkZSBkaWZlcmVudGVzIGF1dG9yZXMgY29tbyBDYW1hcmdvIHkgSGVkZXJpY2ggKDIwMTApLCBDb3V0aW5obywgRS4gKDIwMTQpLCBjaXRhIGEgTm92YWsgeSBHb3dpbiAoMTk4NCksIHkgcG9yIE9yZWxsYW5hIFZhbGTDqXMgKDIwMDkpLCBxdWUgY29udGluw7phIGNpdGFuZG8gYSBBdXN1YmVsIHkgUGlhZ2V0LiIpXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgbWItMyBtYi1sZy0wIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1iLTQgbWItbGctMCIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWEyLzE3LnBuZyIpLCJhbHQiOiIifX0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC0xMiBjb2wtbWQtNiBjb2wtbGctMyBvZmZzZXQtbGctMSJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9tYXRlcmlhbC1jb21wbGVtZW50YXJpby5zdmciKSwiYWx0IjoiIn19KV0pXSl9XQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}